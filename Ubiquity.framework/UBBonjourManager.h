/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/Ubiquity.framework/Ubiquity
 */

/* RuntimeBrowser encountered one or more ivar type encodings for a function pointer. 
   The runtime does not encode function signature information.  We use a signature of: 
           "int (*funcName)()",  where funcName might be null. 
 */

@class NSMutableSet, NSString, APSConnection, NSSet, NSMutableDictionary;

@interface UBBonjourManager : NSObject <NSNetServiceDelegate, NSNetServiceBrowserDelegate, APSConnectionDelegate> {
    bool_suspended;
    bool_invalidated;
    bool_setupComplete;
    bool_use_ssl;
    bool_previously_suspended;
    bool_bonjourDisabled;
    bool_srvBonjourDisabled;
    struct dispatch_queue_s { } *_notifyQueue;
    struct __CFRunLoop { } *_runloop;
    unsigned char _uuid[16];
    int _port;
    int (*_notify_cb)();
    int (*_mme_set_token_cb)();
    int (*_mme_push_cb)();
    void *_notify_ctx;
    NSString *_domain;
    NSString *_mmeUUID;
    NSString *_pushEnvironment;
    NSSet *_vlans;
    NSMutableDictionary *_identities;
    struct __CFDictionary { } *_uuidCtx;
    int _periodicPushInterval;
    unsigned long long _refetchMMeConfigTime;
    struct dispatch_source_s { } *_periodicPushTimer;
    APSConnection *_pushConnection;
    struct { 
        NSMutableDictionary *_browsers; 
        NSMutableSet *_resolvingNetServices; 
        struct { 
            NSMutableDictionary *_byFQDN; 
            NSMutableDictionary *_byIdentity; 
        } _monitoredNetServices; 
    } _browserState;
    struct { 
        NSMutableDictionary *_netServices; 
    } _publishedState;
    struct { 
        struct { 
            NSMutableDictionary *_byFQDN; 
            NSMutableDictionary *_byEndPoint; 
            NSMutableDictionary *_byUUID; 
        } _foundServices; 
        NSMutableDictionary *_preferredFQDN; 
        NSMutableDictionary *_collectionUUIDs; 
    } _serviceState;
}


- (void)invalidate;
- (void)netService:(id)arg1 didUpdateTXTRecordData:(id)arg2;
- (void)netServiceBrowser:(id)arg1 didRemoveService:(id)arg2 moreComing:(BOOL)arg3;
- (void)netServiceBrowser:(id)arg1 didFindService:(id)arg2 moreComing:(BOOL)arg3;
- (void)netService:(id)arg1 didNotResolve:(id)arg2;
- (void)netServiceDidResolveAddress:(id)arg1;
- (bool)_isValid;
- (void)_processNetService:(id)arg1 type:(int)arg2;
- (id)_fqdnForServiceDict:(id)arg1;
- (id)_endPointForServiceDict:(id)arg1;
- (id)_getIdentityForNetService:(id)arg1 rnd:(unsigned int*)arg2;
- (void)_initNetworkState;
- (bool)_havePreferredFQDN:(id)arg1;
- (id)_fqdnForNetService:(id)arg1;
- (void)_restartBrowsers;
- (void)_updateServicesForIdentity:(id)arg1;
- (void)sendMMePush:(id)arg1;
- (id)_serviceDataForIdentity:(id)arg1 prependedID:(id)arg2;
- (bool)_splitNetServiceName:(id)arg1 rnd:(unsigned int*)arg2 hashedID:(id*)arg3;
- (void)_refetchMMeConfig;
- (void)_deallocNetworkState;
- (void)_initPushState;
- (void)_initServiceState;
- (void)_initPublishedState;
- (void)_initBrowserState;
- (void)_deallocPushState;
- (void)_deallocServiceState;
- (void)_deallocPublishedState;
- (void)_deallocBrowserState;
- (void)_rearmPeriodicPushTimer;
- (void)_runBlockOnRL:(id)arg1;
- (struct { unsigned char x1[16]; boolx2; void *x3; }*)copyOnlinePeerContexts:(unsigned int*)arg1;
- (void)setContext:(void*)arg1 forUUID:(unsigned char[16])arg2;
- (bool)uuidOnline:(unsigned char[16])arg1;
- (id)copyPreferredEndPointURL:(unsigned char[16])arg1;
- (void)setPreferredFQDN:(id)arg1 forUUID:(unsigned char[16])arg2;
- (void)setMMeUUID:(unsigned char[16])arg1;
- (void)setupMMeEnvironment:(id)arg1 mme_set_token_cb:(int (*)())arg2 mme_push_cb:(int (*)())arg3;
- (void)removeIdentity:(id)arg1;
- (void)updateIdentity:(id)arg1 collections:(id)arg2;
- (void)setupClient:(unsigned char[16])arg1 port:(int)arg2 use_ssl:(bool)arg3 notify_cb:(int (*)())arg4 notify_ctx:(void*)arg5 domain:(id)arg6 vlans:(id)arg7;
- (void)resume;
- (void)suspend;
- (void)connection:(id)arg1 didReceiveMessageForTopic:(id)arg2 userInfo:(id)arg3;
- (void)connection:(id)arg1 didReceivePublicToken:(id)arg2;
- (id)init;
- (void)dealloc;

@end
