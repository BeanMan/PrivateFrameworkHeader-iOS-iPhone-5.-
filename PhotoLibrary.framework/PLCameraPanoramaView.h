/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/PhotoLibrary.framework/PhotoLibrary
 */

@class NSOperationQueue, UIImageView, PLCameraLevelView, CADisplayLink, UIView, CMMotionManager, CAShapeLayer, CALayer, PLCameraOverlayTextLabelView, PLCameraPanoramaProgressView;

@interface PLCameraPanoramaView : UIView <UIAccelerometerDelegate> {
    UIView *_previewOutline;
    UIView *_expectedGhost;
    struct CGPoint { 
        float x; 
        float y; 
    } _expectedGhostBeginCenter;
    struct CGPoint { 
        float x; 
        float y; 
    } _expectedGhostEndCenter;
    UIView *_unfilledPreviewView;
    UIView *_arrowView;
    struct CGPoint { 
        float x; 
        float y; 
    } _arrowViewBeginCenter;
    struct CGPoint { 
        float x; 
        float y; 
    } _arrowViewEndCenter;
    UIImageView *_arrowImageView;
    UIImageView *_glowArrowImageView;
    float _previewScale;
    CALayer *_previewLayer;
    CAShapeLayer *_previewMaskLayer;
    PLCameraOverlayTextLabelView *_captureTextView;
    PLCameraOverlayTextLabelView *_beginTextView;
    PLCameraOverlayTextLabelView *_arrowTextView;
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    } _visiblePreviewRect;
    BOOL _ignorePreviewUpdates;
    PLCameraPanoramaProgressView *_hudOverlay;
    CADisplayLink *_expectedDisplayLink;
    float _expectedMovementPerFrame;
    float _expectedMovement;
    BOOL _isAnimatingExpectedGhost;
    float _previousVerticalDeviation;
    PLCameraLevelView *_levelView;
    CADisplayLink *_displayLink;
    CMMotionManager *_motionManager;
    NSOperationQueue *_accelerometerQueue;
    float _accelerationX;
    float _accelerationY;
    float _accelerationZ;
}

@property(readonly) UIView * panoramaPreviewView;
@property(readonly) CALayer * panoramaPreviewLayer;


- (id)hitTest:(struct CGPoint { float x1; float x2; })arg1 withEvent:(id)arg2;
- (void)startExpectedGhostAnimation;
- (void)_cleanupPostCapture;
- (id)panoramaPreviewView;
- (void)_accelerometerDidUpdateWithData:(id)arg1 error:(id)arg2;
- (void)updateWithOrientation:(int)arg1 rollDegrees:(float)arg2 pitchDelta:(float)arg3;
- (void)_updateExpected;
- (void)updateLevel;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 panoramaPreviewScale:(float)arg2 panoramaPreviewSize:(struct CGSize { float x1; float x2; })arg3;
- (void)showSavingHUD:(BOOL)arg1;
- (void)updateWithPreviewState:(id)arg1;
- (id)panoramaPreviewLayer;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })visiblePreviewRect;
- (void)dealloc;

@end
