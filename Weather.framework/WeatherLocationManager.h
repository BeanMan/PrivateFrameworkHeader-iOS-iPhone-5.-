/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/Weather.framework/Weather
 */

@class <CLLocationManagerDelegate>, NSTimer, CLLocationManager, NSDate;

@interface WeatherLocationManager : NSObject <CLLocationManagerDelegate> {
    CLLocationManager *_locationManager;
    NSDate *_lastLocationTimeStamp;
    float _lastLocationAccuracy;
    <CLLocationManagerDelegate> *_delegate;
    BOOL _isTrackingLocationEnabled;
    NSTimer *_nonSLCLocationUpdateTimer;
    NSTimer *_accuracyFallbackTimer;
    int _authorizationStatus;
    double _oldestAcceptedTime;
    double _lastLocationUpdateTime;
    double _nextPlannedUpdate;
    BOOL _isTrackingLocation;
}

@property BOOL isTrackingLocation;
@property int authorizationStatus;
@property BOOL isTrackingLocationEnabled;
@property <CLLocationManagerDelegate> * delegate;
@property float lastLocationAccuracy;
@property(copy) NSDate * lastLocationTimeStamp;
@property(retain) CLLocationManager * locationManager;

+ (id)sharedWeatherLocationManager;

- (void)setDelegate:(id)arg1;
- (void)setLocationManager:(id)arg1;
- (id)locationManager;
- (void)locationManager:(id)arg1 didUpdateToLocation:(id)arg2 fromLocation:(id)arg3;
- (void)locationManager:(id)arg1 didChangeAuthorizationStatus:(int)arg2;
- (int)authorizationStatus;
- (id)delegate;
- (void)forceLocationUpdate;
- (BOOL)loadAndPrepareLocationTrackingState;
- (int)forceLoadingAuthorizationStatus;
- (BOOL)isLocalStaleOrOutOfDate;
- (double)_nextPlannedUpdate;
- (double)_lastLocationUpdateTime;
- (BOOL)isTrackingLocation;
- (void)setIsTrackingLocation:(BOOL)arg1;
- (BOOL)isTrackingLocationEnabled;
- (void)setIsTrackingLocationEnabled:(BOOL)arg1;
- (void)_clearLastLocUpdateTime;
- (void)setLocationTrackingActive:(BOOL)arg1;
- (void)setAuthorizationStatus:(int)arg1;
- (void)setLocationTrackingEnabled:(BOOL)arg1;
- (void)updateLocation:(id)arg1;
- (void)_cleanupLocationTimer;
- (void)_setUpLocationTimerWithInterval:(float)arg1;
- (float)lastLocationAccuracy;
- (id)lastLocationTimeStamp;
- (void)_cleanupAccuracyFallbackTimer;
- (void)setLastLocationTimeStamp:(id)arg1;
- (void)setLastLocationAccuracy:(float)arg1;
- (void)_updateLocation:(id)arg1;

@end
