/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/iTunesStore.framework/iTunesStore
 */

@class NSString, NSMutableSet;

@interface ISNetworkObserver : NSObject <ISSingleton, SSDownloadQueueObserver> {
    struct dispatch_queue_s { } *_dispatchQueue;
    BOOL _isCellularRestricted;
    double _lastNetworkTypeChangeTime;
    int _networkUsageCount;
    int _networkType;
    NSMutableSet *_observedDownloadQueues;
    struct __SCNetworkReachability { } *_reachability;
}

@property int networkType;
@property(readonly) double lastNetworkTypeChangeTime;
@property(getter=isUsingNetwork,readonly) BOOL usingNetwork;
@property(getter=isCellularDataRestricted,readonly) BOOL cellularDataRestricted;
@property(readonly) BOOL shouldShowCellularAutomaticDownloadsSwitch;
@property(readonly) NSString * connectionTypeHeader;
@property(getter=isWiFiEnabled,readonly) BOOL wifiEnabled;

+ (void)setWiFiEnabled:(BOOL)arg1;
+ (void)setAirplaneModeEnabled:(BOOL)arg1;
+ (void)set3GEnabled:(BOOL)arg1;
+ (id)sharedInstance;
+ (void)setSharedInstance:(id)arg1;

- (BOOL)shouldShowCellularAutomaticDownloadsSwitch;
- (BOOL)isCellularDataRestricted;
- (void)downloadQueue:(id)arg1 changedWithRemovals:(id)arg2;
- (void)downloadQueueNetworkUsageChanged:(id)arg1;
- (BOOL)isWiFiEnabled;
- (void)_reloadCellularRestriction;
- (void)setNetworkType:(int)arg1;
- (void)endObservingDownloadQueue:(id)arg1;
- (void)beginObservingDownloadQueue:(id)arg1;
- (int)_networkTypeFromDataIndicator:(id)arg1;
- (void)_postTypeChangedNotificationFromValue:(int)arg1 toValue:(int)arg2;
- (int)_setNetworkType:(int)arg1;
- (void)_reloadNetworkType;
- (id)copyValueForCarrierBundleKey:(id)arg1;
- (void)_postUsageChangedToValue:(BOOL)arg1;
- (BOOL)_ntsIsUsingNetwork;
- (void)_telephonyObserverAvailableNotification:(id)arg1;
- (void)_dataStatusChangedNotification:(id)arg1;
- (int)_currentNetworkType;
- (id)connectionTypeHeader;
- (double)lastNetworkTypeChangeTime;
- (id)init;
- (void)dealloc;
- (void)reloadNetworkType;
- (void)endUsingNetwork;
- (void)beginUsingNetwork;
- (BOOL)isUsingNetwork;
- (int)networkType;

@end
