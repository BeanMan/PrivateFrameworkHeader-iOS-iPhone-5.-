/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/WebCore.framework/WebCore
 */

/* RuntimeBrowser encountered one or more ivar type encodings for a function pointer. 
   The runtime does not encode function signature information.  We use a signature of: 
           "int (*funcName)()",  where funcName might be null. 
 */

@class WebScriptObjectPrivate;

@interface WebScriptObject : NSObject  {
    WebScriptObjectPrivate *_private;
}

+ (BOOL)throwException:(id)arg1;
+ (id)scriptObjectForJSObject:(struct OpaqueJSValue { }*)arg1 originRootObject:(struct RootObject { int (**x1)(); int x2; boolx3; void *x4; struct Strong<JSC::JSGlobalObject> { struct JSValue {} *x_5_1_1; } x5; struct HashCountedSet<JSC::JSObject*,WTF::PtrHash<JSC::JSObject*>,WTF::HashTraits<JSC::JSObject*> > { struct HashMap<JSC::JSObject*,unsigned int,WTF::PtrHash<JSC::JSObject*>,WTF::HashTraits<JSC::JSObject*>,WTF::HashTraits<unsigned int> > { struct HashTable<JSC::JSObject*,std::pair<JSC::JSObject*, unsigned int>,WTF::PairFirstExtractor<std::pair<JSC::JSObject*, unsigned int> >,WTF::PtrHash<JSC::JSObject*>,WTF::PairHashTraits<WTF::HashTraits<JSC::JSObject*>, WTF::HashTraits<unsigned int> >,WTF::HashTraits<JSC::JSObject*> > { struct pair<JSC::JSObject*,unsigned int> {} *x_1_3_1; int x_1_3_2; int x_1_3_3; int x_1_3_4; int x_1_3_5; } x_1_2_1; } x_6_1_1; } x6; struct HashMap<JSC::Bindings::RuntimeObject*,JSC::Weak<JSC::Bindings::RuntimeObject>,WTF::PtrHash<JSC::Bindings::RuntimeObject*>,WTF::HashTraits<JSC::Bindings::RuntimeObject*>,WTF::HashTraits<JSC::Weak<JSC::Bindings::RuntimeObject> > > { struct HashTable<JSC::Bindings::RuntimeObject*,std::pair<JSC::Bindings::RuntimeObject*, JSC::Weak<JSC::Bindings::RuntimeObject> >,WTF::PairFirstExtractor<std::pair<JSC::Bindings::RuntimeObject*, JSC::Weak<JSC::Bindings::RuntimeObject> > >,WTF::PtrHash<JSC::Bindings::RuntimeObject*>,WTF::PairHashTraits<WTF::HashTraits<JSC::Bindings::RuntimeObject*>, WTF::HashTraits<JSC::Weak<JSC::Bindings::RuntimeObject> > >,WTF::HashTraits<JSC::Bindings::RuntimeObject*> > { struct pair<JSC::Bindings::RuntimeObject*,JSC::Weak<JSC::Bindings::RuntimeObject> > {} *x_1_2_1; int x_1_2_2; int x_1_2_3; int x_1_2_4; int x_1_2_5; } x_7_1_1; } x7; struct HashSet<JSC::Bindings::RootObject::InvalidationCallback*,WTF::PtrHash<JSC::Bindings::RootObject::InvalidationCallback*>,WTF::HashTraits<JSC::Bindings::RootObject::InvalidationCallback*> > { struct HashTable<JSC::Bindings::RootObject::InvalidationCallback*,JSC::Bindings::RootObject::InvalidationCallback*,WTF::IdentityExtractor<JSC::Bindings::RootObject::InvalidationCallback*>,WTF::PtrHash<JSC::Bindings::RootObject::InvalidationCallback*>,WTF::HashTraits<JSC::Bindings::RootObject::InvalidationCallback*>,WTF::HashTraits<JSC::Bindings::RootObject::InvalidationCallback*> > { struct InvalidationCallback {} **x_1_2_1; int x_1_2_2; int x_1_2_3; int x_1_2_4; int x_1_2_5; } x_8_1_1; } x8; }*)arg2 rootObject:(struct RootObject { int (**x1)(); int x2; boolx3; void *x4; struct Strong<JSC::JSGlobalObject> { struct JSValue {} *x_5_1_1; } x5; struct HashCountedSet<JSC::JSObject*,WTF::PtrHash<JSC::JSObject*>,WTF::HashTraits<JSC::JSObject*> > { struct HashMap<JSC::JSObject*,unsigned int,WTF::PtrHash<JSC::JSObject*>,WTF::HashTraits<JSC::JSObject*>,WTF::HashTraits<unsigned int> > { struct HashTable<JSC::JSObject*,std::pair<JSC::JSObject*, unsigned int>,WTF::PairFirstExtractor<std::pair<JSC::JSObject*, unsigned int> >,WTF::PtrHash<JSC::JSObject*>,WTF::PairHashTraits<WTF::HashTraits<JSC::JSObject*>, WTF::HashTraits<unsigned int> >,WTF::HashTraits<JSC::JSObject*> > { struct pair<JSC::JSObject*,unsigned int> {} *x_1_3_1; int x_1_3_2; int x_1_3_3; int x_1_3_4; int x_1_3_5; } x_1_2_1; } x_6_1_1; } x6; struct HashMap<JSC::Bindings::RuntimeObject*,JSC::Weak<JSC::Bindings::RuntimeObject>,WTF::PtrHash<JSC::Bindings::RuntimeObject*>,WTF::HashTraits<JSC::Bindings::RuntimeObject*>,WTF::HashTraits<JSC::Weak<JSC::Bindings::RuntimeObject> > > { struct HashTable<JSC::Bindings::RuntimeObject*,std::pair<JSC::Bindings::RuntimeObject*, JSC::Weak<JSC::Bindings::RuntimeObject> >,WTF::PairFirstExtractor<std::pair<JSC::Bindings::RuntimeObject*, JSC::Weak<JSC::Bindings::RuntimeObject> > >,WTF::PtrHash<JSC::Bindings::RuntimeObject*>,WTF::PairHashTraits<WTF::HashTraits<JSC::Bindings::RuntimeObject*>, WTF::HashTraits<JSC::Weak<JSC::Bindings::RuntimeObject> > >,WTF::HashTraits<JSC::Bindings::RuntimeObject*> > { struct pair<JSC::Bindings::RuntimeObject*,JSC::Weak<JSC::Bindings::RuntimeObject> > {} *x_1_2_1; int x_1_2_2; int x_1_2_3; int x_1_2_4; int x_1_2_5; } x_7_1_1; } x7; struct HashSet<JSC::Bindings::RootObject::InvalidationCallback*,WTF::PtrHash<JSC::Bindings::RootObject::InvalidationCallback*>,WTF::HashTraits<JSC::Bindings::RootObject::InvalidationCallback*> > { struct HashTable<JSC::Bindings::RootObject::InvalidationCallback*,JSC::Bindings::RootObject::InvalidationCallback*,WTF::IdentityExtractor<JSC::Bindings::RootObject::InvalidationCallback*>,WTF::PtrHash<JSC::Bindings::RootObject::InvalidationCallback*>,WTF::HashTraits<JSC::Bindings::RootObject::InvalidationCallback*>,WTF::HashTraits<JSC::Bindings::RootObject::InvalidationCallback*> > { struct InvalidationCallback {} **x_1_2_1; int x_1_2_2; int x_1_2_3; int x_1_2_4; int x_1_2_5; } x_8_1_1; } x8; }*)arg3;
+ (id)_convertValueToObjcValue:(struct JSValue { union EncodedValueDescriptor { long long x_1_1_1; double x_1_1_2; struct $_654 { int x_3_2_1; int x_3_2_2; } x_1_1_3; } x1; })arg1 originRootObject:(struct RootObject { int (**x1)(); int x2; boolx3; void *x4; struct Strong<JSC::JSGlobalObject> { struct JSValue {} *x_5_1_1; } x5; struct HashCountedSet<JSC::JSObject*,WTF::PtrHash<JSC::JSObject*>,WTF::HashTraits<JSC::JSObject*> > { struct HashMap<JSC::JSObject*,unsigned int,WTF::PtrHash<JSC::JSObject*>,WTF::HashTraits<JSC::JSObject*>,WTF::HashTraits<unsigned int> > { struct HashTable<JSC::JSObject*,std::pair<JSC::JSObject*, unsigned int>,WTF::PairFirstExtractor<std::pair<JSC::JSObject*, unsigned int> >,WTF::PtrHash<JSC::JSObject*>,WTF::PairHashTraits<WTF::HashTraits<JSC::JSObject*>, WTF::HashTraits<unsigned int> >,WTF::HashTraits<JSC::JSObject*> > { struct pair<JSC::JSObject*,unsigned int> {} *x_1_3_1; int x_1_3_2; int x_1_3_3; int x_1_3_4; int x_1_3_5; } x_1_2_1; } x_6_1_1; } x6; struct HashMap<JSC::Bindings::RuntimeObject*,JSC::Weak<JSC::Bindings::RuntimeObject>,WTF::PtrHash<JSC::Bindings::RuntimeObject*>,WTF::HashTraits<JSC::Bindings::RuntimeObject*>,WTF::HashTraits<JSC::Weak<JSC::Bindings::RuntimeObject> > > { struct HashTable<JSC::Bindings::RuntimeObject*,std::pair<JSC::Bindings::RuntimeObject*, JSC::Weak<JSC::Bindings::RuntimeObject> >,WTF::PairFirstExtractor<std::pair<JSC::Bindings::RuntimeObject*, JSC::Weak<JSC::Bindings::RuntimeObject> > >,WTF::PtrHash<JSC::Bindings::RuntimeObject*>,WTF::PairHashTraits<WTF::HashTraits<JSC::Bindings::RuntimeObject*>, WTF::HashTraits<JSC::Weak<JSC::Bindings::RuntimeObject> > >,WTF::HashTraits<JSC::Bindings::RuntimeObject*> > { struct pair<JSC::Bindings::RuntimeObject*,JSC::Weak<JSC::Bindings::RuntimeObject> > {} *x_1_2_1; int x_1_2_2; int x_1_2_3; int x_1_2_4; int x_1_2_5; } x_7_1_1; } x7; struct HashSet<JSC::Bindings::RootObject::InvalidationCallback*,WTF::PtrHash<JSC::Bindings::RootObject::InvalidationCallback*>,WTF::HashTraits<JSC::Bindings::RootObject::InvalidationCallback*> > { struct HashTable<JSC::Bindings::RootObject::InvalidationCallback*,JSC::Bindings::RootObject::InvalidationCallback*,WTF::IdentityExtractor<JSC::Bindings::RootObject::InvalidationCallback*>,WTF::PtrHash<JSC::Bindings::RootObject::InvalidationCallback*>,WTF::HashTraits<JSC::Bindings::RootObject::InvalidationCallback*>,WTF::HashTraits<JSC::Bindings::RootObject::InvalidationCallback*> > { struct InvalidationCallback {} **x_1_2_1; int x_1_2_2; int x_1_2_3; int x_1_2_4; int x_1_2_5; } x_8_1_1; } x8; }*)arg2 rootObject:(struct RootObject { int (**x1)(); int x2; boolx3; void *x4; struct Strong<JSC::JSGlobalObject> { struct JSValue {} *x_5_1_1; } x5; struct HashCountedSet<JSC::JSObject*,WTF::PtrHash<JSC::JSObject*>,WTF::HashTraits<JSC::JSObject*> > { struct HashMap<JSC::JSObject*,unsigned int,WTF::PtrHash<JSC::JSObject*>,WTF::HashTraits<JSC::JSObject*>,WTF::HashTraits<unsigned int> > { struct HashTable<JSC::JSObject*,std::pair<JSC::JSObject*, unsigned int>,WTF::PairFirstExtractor<std::pair<JSC::JSObject*, unsigned int> >,WTF::PtrHash<JSC::JSObject*>,WTF::PairHashTraits<WTF::HashTraits<JSC::JSObject*>, WTF::HashTraits<unsigned int> >,WTF::HashTraits<JSC::JSObject*> > { struct pair<JSC::JSObject*,unsigned int> {} *x_1_3_1; int x_1_3_2; int x_1_3_3; int x_1_3_4; int x_1_3_5; } x_1_2_1; } x_6_1_1; } x6; struct HashMap<JSC::Bindings::RuntimeObject*,JSC::Weak<JSC::Bindings::RuntimeObject>,WTF::PtrHash<JSC::Bindings::RuntimeObject*>,WTF::HashTraits<JSC::Bindings::RuntimeObject*>,WTF::HashTraits<JSC::Weak<JSC::Bindings::RuntimeObject> > > { struct HashTable<JSC::Bindings::RuntimeObject*,std::pair<JSC::Bindings::RuntimeObject*, JSC::Weak<JSC::Bindings::RuntimeObject> >,WTF::PairFirstExtractor<std::pair<JSC::Bindings::RuntimeObject*, JSC::Weak<JSC::Bindings::RuntimeObject> > >,WTF::PtrHash<JSC::Bindings::RuntimeObject*>,WTF::PairHashTraits<WTF::HashTraits<JSC::Bindings::RuntimeObject*>, WTF::HashTraits<JSC::Weak<JSC::Bindings::RuntimeObject> > >,WTF::HashTraits<JSC::Bindings::RuntimeObject*> > { struct pair<JSC::Bindings::RuntimeObject*,JSC::Weak<JSC::Bindings::RuntimeObject> > {} *x_1_2_1; int x_1_2_2; int x_1_2_3; int x_1_2_4; int x_1_2_5; } x_7_1_1; } x7; struct HashSet<JSC::Bindings::RootObject::InvalidationCallback*,WTF::PtrHash<JSC::Bindings::RootObject::InvalidationCallback*>,WTF::HashTraits<JSC::Bindings::RootObject::InvalidationCallback*> > { struct HashTable<JSC::Bindings::RootObject::InvalidationCallback*,JSC::Bindings::RootObject::InvalidationCallback*,WTF::IdentityExtractor<JSC::Bindings::RootObject::InvalidationCallback*>,WTF::PtrHash<JSC::Bindings::RootObject::InvalidationCallback*>,WTF::HashTraits<JSC::Bindings::RootObject::InvalidationCallback*>,WTF::HashTraits<JSC::Bindings::RootObject::InvalidationCallback*> > { struct InvalidationCallback {} **x_1_2_1; int x_1_2_2; int x_1_2_3; int x_1_2_4; int x_1_2_5; } x_8_1_1; } x8; }*)arg3;
+ (void)initialize;
+ (id)_iAd_pointWithCGPoint:(struct CGPoint { float x1; float x2; })arg1;
+ (id)_iAd_rectWithCGRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;

- (id)valueForKey:(id)arg1;
- (void)finalize;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (id)callWebScriptMethod:(id)arg1 withArguments:(id)arg2;
- (id)evaluateWebScript:(id)arg1;
- (void)removeWebScriptKey:(id)arg1;
- (BOOL)hasWebScriptKey:(id)arg1;
- (id)stringRepresentation;
- (void)setWebScriptValueAtIndex:(unsigned int)arg1 value:(id)arg2;
- (void)setException:(id)arg1;
- (struct OpaqueJSValue { }*)JSObject;
- (id)_initWithJSObject:(struct JSObject { int (**x1)(); struct WriteBarrier<JSC::Structure> { struct JSCell {} *x_2_1_1; } x2; struct WriteBarrierBase<JSC::Unknown> {} *x3; struct WriteBarrier<JSC::Structure> { struct JSCell {} *x_4_1_1; } x4; }*)arg1 originRootObject:(struct PassRefPtr<JSC::Bindings::RootObject> { struct RootObject {} *x1; })arg2 rootObject:(struct PassRefPtr<JSC::Bindings::RootObject> { struct RootObject {} *x1; })arg3;
- (BOOL)_isSafeScript;
- (struct RootObject { int (**x1)(); int x2; boolx3; void *x4; struct Strong<JSC::JSGlobalObject> { struct JSValue {} *x_5_1_1; } x5; struct HashCountedSet<JSC::JSObject*,WTF::PtrHash<JSC::JSObject*>,WTF::HashTraits<JSC::JSObject*> > { struct HashMap<JSC::JSObject*,unsigned int,WTF::PtrHash<JSC::JSObject*>,WTF::HashTraits<JSC::JSObject*>,WTF::HashTraits<unsigned int> > { struct HashTable<JSC::JSObject*,std::pair<JSC::JSObject*, unsigned int>,WTF::PairFirstExtractor<std::pair<JSC::JSObject*, unsigned int> >,WTF::PtrHash<JSC::JSObject*>,WTF::PairHashTraits<WTF::HashTraits<JSC::JSObject*>, WTF::HashTraits<unsigned int> >,WTF::HashTraits<JSC::JSObject*> > { struct pair<JSC::JSObject*,unsigned int> {} *x_1_3_1; int x_1_3_2; int x_1_3_3; int x_1_3_4; int x_1_3_5; } x_1_2_1; } x_6_1_1; } x6; struct HashMap<JSC::Bindings::RuntimeObject*,JSC::Weak<JSC::Bindings::RuntimeObject>,WTF::PtrHash<JSC::Bindings::RuntimeObject*>,WTF::HashTraits<JSC::Bindings::RuntimeObject*>,WTF::HashTraits<JSC::Weak<JSC::Bindings::RuntimeObject> > > { struct HashTable<JSC::Bindings::RuntimeObject*,std::pair<JSC::Bindings::RuntimeObject*, JSC::Weak<JSC::Bindings::RuntimeObject> >,WTF::PairFirstExtractor<std::pair<JSC::Bindings::RuntimeObject*, JSC::Weak<JSC::Bindings::RuntimeObject> > >,WTF::PtrHash<JSC::Bindings::RuntimeObject*>,WTF::PairHashTraits<WTF::HashTraits<JSC::Bindings::RuntimeObject*>, WTF::HashTraits<JSC::Weak<JSC::Bindings::RuntimeObject> > >,WTF::HashTraits<JSC::Bindings::RuntimeObject*> > { struct pair<JSC::Bindings::RuntimeObject*,JSC::Weak<JSC::Bindings::RuntimeObject> > {} *x_1_2_1; int x_1_2_2; int x_1_2_3; int x_1_2_4; int x_1_2_5; } x_7_1_1; } x7; struct HashSet<JSC::Bindings::RootObject::InvalidationCallback*,WTF::PtrHash<JSC::Bindings::RootObject::InvalidationCallback*>,WTF::HashTraits<JSC::Bindings::RootObject::InvalidationCallback*> > { struct HashTable<JSC::Bindings::RootObject::InvalidationCallback*,JSC::Bindings::RootObject::InvalidationCallback*,WTF::IdentityExtractor<JSC::Bindings::RootObject::InvalidationCallback*>,WTF::PtrHash<JSC::Bindings::RootObject::InvalidationCallback*>,WTF::HashTraits<JSC::Bindings::RootObject::InvalidationCallback*>,WTF::HashTraits<JSC::Bindings::RootObject::InvalidationCallback*> > { struct InvalidationCallback {} **x_1_2_1; int x_1_2_2; int x_1_2_3; int x_1_2_4; int x_1_2_5; } x_8_1_1; } x8; }*)_originRootObject;
- (id)webScriptValueAtIndex:(unsigned int)arg1;
- (void)_setOriginRootObject:(struct PassRefPtr<JSC::Bindings::RootObject> { struct RootObject {} *x1; })arg1 andRootObject:(struct PassRefPtr<JSC::Bindings::RootObject> { struct RootObject {} *x1; })arg2;
- (struct JSObject { int (**x1)(); struct WriteBarrier<JSC::Structure> { struct JSCell {} *x_2_1_1; } x2; struct WriteBarrierBase<JSC::Unknown> {} *x3; struct WriteBarrier<JSC::Structure> { struct JSCell {} *x_4_1_1; } x4; }*)_imp;
- (BOOL)_hasImp;
- (void)_initializeScriptDOMNodeImp;
- (void)_setImp:(struct JSObject { int (**x1)(); struct WriteBarrier<JSC::Structure> { struct JSCell {} *x_2_1_1; } x2; struct WriteBarrierBase<JSC::Unknown> {} *x3; struct WriteBarrier<JSC::Structure> { struct JSCell {} *x_4_1_1; } x4; }*)arg1 originRootObject:(struct PassRefPtr<JSC::Bindings::RootObject> { struct RootObject {} *x1; })arg2 rootObject:(struct PassRefPtr<JSC::Bindings::RootObject> { struct RootObject {} *x1; })arg3;
- (struct RootObject { int (**x1)(); int x2; boolx3; void *x4; struct Strong<JSC::JSGlobalObject> { struct JSValue {} *x_5_1_1; } x5; struct HashCountedSet<JSC::JSObject*,WTF::PtrHash<JSC::JSObject*>,WTF::HashTraits<JSC::JSObject*> > { struct HashMap<JSC::JSObject*,unsigned int,WTF::PtrHash<JSC::JSObject*>,WTF::HashTraits<JSC::JSObject*>,WTF::HashTraits<unsigned int> > { struct HashTable<JSC::JSObject*,std::pair<JSC::JSObject*, unsigned int>,WTF::PairFirstExtractor<std::pair<JSC::JSObject*, unsigned int> >,WTF::PtrHash<JSC::JSObject*>,WTF::PairHashTraits<WTF::HashTraits<JSC::JSObject*>, WTF::HashTraits<unsigned int> >,WTF::HashTraits<JSC::JSObject*> > { struct pair<JSC::JSObject*,unsigned int> {} *x_1_3_1; int x_1_3_2; int x_1_3_3; int x_1_3_4; int x_1_3_5; } x_1_2_1; } x_6_1_1; } x6; struct HashMap<JSC::Bindings::RuntimeObject*,JSC::Weak<JSC::Bindings::RuntimeObject>,WTF::PtrHash<JSC::Bindings::RuntimeObject*>,WTF::HashTraits<JSC::Bindings::RuntimeObject*>,WTF::HashTraits<JSC::Weak<JSC::Bindings::RuntimeObject> > > { struct HashTable<JSC::Bindings::RuntimeObject*,std::pair<JSC::Bindings::RuntimeObject*, JSC::Weak<JSC::Bindings::RuntimeObject> >,WTF::PairFirstExtractor<std::pair<JSC::Bindings::RuntimeObject*, JSC::Weak<JSC::Bindings::RuntimeObject> > >,WTF::PtrHash<JSC::Bindings::RuntimeObject*>,WTF::PairHashTraits<WTF::HashTraits<JSC::Bindings::RuntimeObject*>, WTF::HashTraits<JSC::Weak<JSC::Bindings::RuntimeObject> > >,WTF::HashTraits<JSC::Bindings::RuntimeObject*> > { struct pair<JSC::Bindings::RuntimeObject*,JSC::Weak<JSC::Bindings::RuntimeObject> > {} *x_1_2_1; int x_1_2_2; int x_1_2_3; int x_1_2_4; int x_1_2_5; } x_7_1_1; } x7; struct HashSet<JSC::Bindings::RootObject::InvalidationCallback*,WTF::PtrHash<JSC::Bindings::RootObject::InvalidationCallback*>,WTF::HashTraits<JSC::Bindings::RootObject::InvalidationCallback*> > { struct HashTable<JSC::Bindings::RootObject::InvalidationCallback*,JSC::Bindings::RootObject::InvalidationCallback*,WTF::IdentityExtractor<JSC::Bindings::RootObject::InvalidationCallback*>,WTF::PtrHash<JSC::Bindings::RootObject::InvalidationCallback*>,WTF::HashTraits<JSC::Bindings::RootObject::InvalidationCallback*>,WTF::HashTraits<JSC::Bindings::RootObject::InvalidationCallback*> > { struct InvalidationCallback {} **x_1_2_1; int x_1_2_2; int x_1_2_3; int x_1_2_4; int x_1_2_5; } x_8_1_1; } x8; }*)_rootObject;
- (id)_init;
- (id)objectAtIndex:(unsigned int)arg1;
- (void)dealloc;
- (id)safeCallWebScriptMethod:(id)arg1 withArguments:(id)arg2;
- (id)copyValuesForKeys:(id)arg1;
- (BOOL)copyArrayValue:(id*)arg1 withValidator:(int (*)())arg2 context:(void*)arg3;
- (id)safeValueForKey:(id)arg1;
- (id)copyJSONDataWithContext:(struct OpaqueJSContext { }*)arg1;
- (id)copyArrayOrDictionaryWithContext:(struct OpaqueJSContext { }*)arg1;
- (struct CGSize { float x1; float x2; })_iAd_CGSizeValue;
- (struct CGPoint { float x1; float x2; })_iAd_CGPointValue;
- (BOOL)_iAd_hasProperties:(id)arg1 inContext:(struct OpaqueJSContext { }*)arg2 missingProperties:(id*)arg3;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_iAd_CGRectValue;
- (void)_iAd_enumerateObjectsUsingBlock:(id)arg1;
- (id)_iAd_valueForKeyOrNil:(id)arg1;
- (id)_iAd_stringValueForKey:(id)arg1;
- (void)_iAd_webThreadCallWebScriptMethod:(id)arg1 withArguments:(id)arg2;
- (id)_iAd_dictionaryFromTopLevelKeysAndValuesInContext:(struct OpaqueJSContext { }*)arg1;

@end
