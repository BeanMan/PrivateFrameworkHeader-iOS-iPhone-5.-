/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/XPCObjects.framework/XPCObjects
 */

/* RuntimeBrowser encountered an ivar type encoding it does not handle. 
   See Warning(s) below.
 */

@class <XPCProxyTarget>, NSArray;

@interface XPCProxy : NSObject <NSCopying> {
    struct _xpc_connection_s { } *_connection;
    struct dispatch_queue_s { } *_queue;
    <XPCProxyTarget> *_target;
    Class _remoteClass;

  /* Unexpected information at end of encoded ivar type: ? */
  /* Error parsing encoded ivar type info: @? */
    id _errorHandler;

    BOOL _invalidated;
    BOOL _useTraditionalEncoder;
    NSArray *_whitelistedClassNames;
}

@property BOOL useTraditionalEncoder;
@property(readonly) struct _xpc_connection_s { }* connection;
@property Class remoteClass;
@property <XPCProxyTarget> * target;
@property(copy) id errorHandler;

+ (void)initialize;

- (void)invalidate;
- (id)errorHandler;
- (void)setErrorHandler:(id)arg1;
- (void)forwardInvocation:(id)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (struct _xpc_connection_s { }*)connection;
- (void)setTarget:(id)arg1;
- (id)target;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (void)setUseTraditionalEncoder:(BOOL)arg1;
- (void)getProxyClassWithHandler:(id)arg1;
- (BOOL)useTraditionalEncoder;
- (id)_errorForXpcError:(void*)arg1;
- (BOOL)_messageIsInternal:(void*)arg1;
- (void)_handleInternalMessage:(void*)arg1;
- (id)_invocationForMessage:(void*)arg1;
- (id)_proxyDescription;
- (void*)_newInternalMessageWithID:(int)arg1;
- (Class)remoteClass;
- (void*)_newMessageAndReplyHandler:(id*)arg1 forInvocation:(id)arg2;
- (void)_getInvocationArgument:(void*)arg1 argumentType:(const char *)arg2 class:(Class*)arg3 forXpcArgument:(void*)arg4 message:(void*)arg5;
- (void*)_newXpcArgumentForInvocationArgumentAt:(void*)arg1 ofType:(const char *)arg2;
- (id)_objectForXpcEncoding:(void*)arg1;
- (void*)_newXpcEncodingForObject:(id)arg1;
- (void)setRemoteClass:(Class)arg1;
- (void)restrictDecodingToWhitelistedClassNames:(id)arg1;
- (id)initWithConnection:(struct _xpc_connection_s { }*)arg1 queue:(struct dispatch_queue_s { }*)arg2 target:(id)arg3;

@end
