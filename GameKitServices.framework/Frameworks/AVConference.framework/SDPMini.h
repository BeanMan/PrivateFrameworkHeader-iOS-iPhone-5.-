/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/GameKitServices.framework/Frameworks/AVConference.framework/AVConference
 */

@class NSMutableDictionary, NSString;

@interface SDPMini : NSObject  {
    NSMutableDictionary *_dict;
    NSString *_sdpUsername;
}


- (id)toString;
- (id)origin;
- (void)createVideoImageAttr:(id)arg1 attrFormat:(id)arg2;
- (void)fillImageArray:(id)arg1 imageArray:(struct imageTag { int x1; int x2; int x3; int x4; int x5; int x6; int x7; }*)arg2;
- (BOOL)videoDisplayAttribute:(int*)arg1 withHeight:(int*)arg2;
- (BOOL)supportImage:(id)arg1 width:(int)arg2 height:(int)arg3 rate:(int)arg4;
- (void)createVideoImageAttr:(int)arg1 direction:(int)arg2 dimensions:(struct imageTag { int x1; int x2; int x3; int x4; int x5; int x6; int x7; }*)arg3 count:(int)arg4;
- (BOOL)supportsSizeForPayload:(int)arg1 rule:(id)arg2 direction:(int)arg3;
- (id)videoImageAttributes:(int)arg1;
- (id)getVideoSendImages:(id)arg1;
- (void)fillImageStruct:(id)arg1 imageStruct:(struct imageTag { int x1; int x2; int x3; int x4; int x5; int x6; int x7; }*)arg2;
- (id)getVideoRecvImages:(id)arg1;
- (id)defaultAudioPayloads:(BOOL)arg1;
- (int)dataPort;
- (int)dataRTCPPort;
- (const char *)userName;
- (const char *)ipVideo;
- (int)maxImagesize;
- (int)maxFramerate;
- (int)rulesFramerate:(int)arg1;
- (void)rulesImageSize:(int)arg1 pWidth:(int*)arg2 pHeight:(int*)arg3;
- (void)rulesPeerImageSize:(int)arg1 pWidth:(int*)arg2 pHeight:(int*)arg3;
- (char *)srtpKey;
- (char *)srtpSalt;
- (void)setMaxImageSize:(int)arg1 forPayloadType:(int)arg2;
- (void)setMaxBandwidth:(int)arg1;
- (void)setMaxFramerate:(int)arg1;
- (void)setAutoDetectBandwidth:(BOOL)arg1;
- (void)setUseIChatEncryption:(BOOL)arg1;
- (BOOL)useIChatEncryption;
- (void)setAllowAudioRecording:(BOOL)arg1;
- (void)setUseSbr:(BOOL)arg1 blockSize:(int)arg2 forAACFormat:(int)arg3;
- (BOOL)getUseSbr:(BOOL*)arg1 blockSize:(int*)arg2 forAACFormat:(int)arg3;
- (void)setFeaturesListString:(char *)arg1;
- (void)setAudioRTPID:(unsigned long)arg1;
- (void)setVideoRTPID:(unsigned long)arg1;
- (BOOL)hasPureVoice;
- (BOOL)hasViceroyCompatibleAudioCodec;
- (BOOL)hasViceroyCompatibleVideoCodec;
- (BOOL)hasH263;
- (BOOL)irisOpen;
- (void)setMultiPointFlagWithCount:(int)arg1;
- (BOOL)hasMultiPointFlag:(int*)arg1;
- (void)setHardwareInfo:(id)arg1;
- (id)hardwareInfo;
- (void)buildRTPMap;
- (id)RTPMapString:(int)arg1 isAudio:(BOOL)arg2;
- (id)initWithOrigin:(id)arg1 sessionName:(id)arg2;
- (BOOL)setAudioPayloads:(int*)arg1 count:(int)arg2;
- (BOOL)setVideoPayloads:(int*)arg1 count:(int)arg2;
- (void)appendDeviceInfo;
- (id)initWithViceroyDefaultsUsingZeroes:(BOOL)arg1 forAudioOnly:(BOOL)arg2;
- (id)toStringForVersion:(unsigned int)arg1;
- (void)setDataMediaWithArray:(id)arg1 andAttributesWithArray:(id)arg2;
- (id)sessionName;
- (int)addressTypeVideo;
- (int)addressTypeAudio;
- (void)updateVideoAttributePrefix:(id)arg1 withAppendedValue:(id)arg2;
- (const char *)ipAudio;
- (int)audioPort;
- (int)audioRTCPPort;
- (unsigned long)audioRTPID;
- (int)videoPort;
- (int)videoRTCPPort;
- (unsigned long)videoRTPID;
- (BOOL)autoDetectBandwidth;
- (char *)featuresListString;
- (BOOL)aacBlockSize:(int*)arg1;
- (BOOL)getOS:(id*)arg1 model:(id*)arg2;
- (BOOL)getAUNumber:(unsigned long*)arg1;
- (BOOL)allowAudioRecording;
- (int)maxBandwidth;
- (id)audioPayloadTypes;
- (id)videoPayloadTypes;
- (id)defaultAudioPayloads:(BOOL)arg1 withUserCount:(int)arg2;
- (void)resetSDP;
- (void)setOriginWithArray:(id)arg1;
- (void)setConnectionWithArray:(id)arg1;
- (void)setSessionName:(id)arg1;
- (void)appendAudioMedia:(int)arg1;
- (void)appendAudioAttribute:(id)arg1;
- (void)appendVideoMedia:(int)arg1;
- (void)appendVideoAttribute:(id)arg1;
- (void)appendSessionAttribute:(id)arg1;
- (id)SDPUsername;
- (void)setAudioMediaWithArray:(id)arg1 andAttributesWithArray:(id)arg2;
- (void)setBandwidthWithString:(id)arg1;
- (id)initWithViceroyDefaultsUsingZeroes:(BOOL)arg1 forAudioOnly:(BOOL)arg2 withUserCount:(int)arg3;
- (id)defaultAudioPayloads;
- (void)setSDP:(id)arg1;
- (id)sessionString;
- (id)audioStringForVersion:(unsigned int)arg1;
- (id)videoStringForVersion:(unsigned int)arg1;
- (id)dataStringForVersion:(unsigned int)arg1;
- (void)setMediaWithArrayHelper:(id)arg1 mediaArray:(id)arg2 attributesArray:(id)arg3;
- (int)addressTypeForConnection:(id)arg1;
- (id)videoMediaConnection;
- (int)addressType;
- (id)audioMediaConnection;
- (id)videoMediaAttributes;
- (id)videoMedia;
- (void)setVideoMediaWithArray:(id)arg1 andAttributesWithArray:(id)arg2;
- (BOOL)hasAudioCodec:(int)arg1 withPeerSDP:(id)arg2;
- (BOOL)hasVideoCodec:(int)arg1 withPeerSDP:(id)arg2;
- (id)sessionAttributes;
- (id)audioMediaAttributes;
- (int)portForMediaHelper:(id)arg1;
- (id)audioMedia;
- (id)dataMedia;
- (id)dataMediaAttributes;
- (id)connection;
- (const char *)ipFromConnection:(id)arg1;
- (const char *)ip;
- (id)bandwidth;
- (void)setParameters:(id)arg1 forFormat:(int)arg2;
- (id)getParametersForFormat:(int)arg1;
- (BOOL)hasAudioCodec:(int)arg1;
- (BOOL)hasVideoCodec:(int)arg1;
- (id)payloadString:(int)arg1 isAudio:(BOOL)arg2;
- (int)payload:(int)arg1 isAudio:(BOOL)arg2;
- (id)initWithViceroyDefaultsUsingZeroes:(BOOL)arg1;
- (id)initWithString:(id)arg1;
- (id)init;
- (void)dealloc;

@end
