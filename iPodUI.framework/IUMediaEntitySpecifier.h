/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/iPodUI.framework/iPodUI
 */

@class NSString, IUMediaEntitySpecifier;

@interface IUMediaEntitySpecifier : NSObject <NSCoding, NSCopying> {
    NSString *_artist;
    struct CollectionPropertySpecifier { 
        NSString *stringValue; 
        unsigned long long collectionPID; 
    } _album;
    NSString *_genre;
    NSString *_composer;
    NSString *_podcast;
    NSString *_playlist;
    unsigned long long _itemPersistentID;
    unsigned long long _persistentPlaylistUID;
    unsigned int _compilation : 1;
    unsigned int _albumIsAudioBook : 1;
    unsigned int _albumIsITunesU : 1;
    unsigned int _audibleAudioBook : 1;
    int _movieEntityAllowedFileType;
}

@property(readonly) IUMediaEntitySpecifier * mediaEntitySpecifierByRemovingTopLevel;
@property(readonly) NSString * playlistNameOfSpecifiedPlaylist;
@property(readonly) unsigned long long specifiedPlaylistPersistentUID;
@property(readonly) NSString * titleForDerivatives;
@property(readonly) BOOL hasAlbumSpecifier;

+ (void)initialize;
+ (BOOL)isMediaEntityTypeGroupedByDefault:(int)arg1;
+ (id)mediaEntitySpecifierForMediaItem:(id)arg1;
+ (id)_mediaEntitySpecifierWithArtist:(id)arg1 albumPID:(unsigned long long)arg2 baseMediaQuery:(id)arg3;
+ (id)mediaEntitySpecifierForAlbumWithItemsQuery:(id)arg1;
+ (id)mediaEntitySpecifierWithArtist:(id)arg1 albumString:(id)arg2 baseMediaQuery:(id)arg3;
+ (id)mediaEntitySpecifierWithCompilationString:(id)arg1 baseMediaQuery:(id)arg2;
+ (id)mediaEntitySpecifierWithAudioBook:(id)arg1;
+ (id)mediaEntitySpecifierWithPodcast:(id)arg1;
+ (id)mediaEntitySpecifierWithPlaylistPersistentUID:(unsigned long long)arg1;
+ (id)mediaQueryWithEntitiesOfType:(int)arg1 givenSpecifier:(id)arg2;
+ (id)mediaEntitySpecifierForAudibleAudioBooks;

- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (BOOL)hasAlbumSpecifier;
- (id)mediaEntitySpecifierByRemovingTopLevel;
- (id)playlistNameOfSpecifiedPlaylist;
- (id)albumNameOfSpecifiedAlbum;
- (id)_initWithMediaQuery:(id)arg1;
- (void)_lookupPlaylistNameIfNecessary;
- (id)titleForDerivatives;
- (unsigned long long)specifiedPlaylistPersistentUID;
- (BOOL)isEqual:(id)arg1;
- (id)description;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;

@end
