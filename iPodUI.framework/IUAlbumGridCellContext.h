/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/iPodUI.framework/iPodUI
 */

@class <IUAlbumGridCellContextDelegate>, MPImageCache, MPImageModifier, UIImage, MPImageCacheRequest, MPMediaQuery, UIColor, IUMediaDataSource;

@interface IUAlbumGridCellContext : NSObject  {
    <IUAlbumGridCellContextDelegate> *_delegate;
    struct __CFDictionary { } *_groupMemberDataCache;
    MPImageCache *_imageCache;
    MPImageModifier *_imageModifier;
    int _imageContentMode;
    MPImageCacheRequest *_placeholderImageCacheRequest;
    UIImage *_unmodifiedPlaceholderImage;
    UIImage *_placeholderImage;
    MPMediaQuery *_query;
    struct __CFDictionary { } *_stringSizeCache;
    int _titleStyle;
    UIColor *_titleColor;
    UIColor *_subtitleColor;
    UIColor *_albumFillColor;
    BOOL _useTimedArtwork;
    BOOL _useUnmodifiedThumbnails;
    BOOL _drawShadow;
    BOOL _overlapIndexBar;
    IUMediaDataSource *_dataSource;
}

@property <IUAlbumGridCellContextDelegate> * delegate;
@property(readonly) unsigned int albumsPerRow;
@property(readonly) struct CGSize { float x1; float x2; } thumbnailSize;
@property(readonly) struct CGPoint { float x1; float x2; } actualImageOrigin;
@property(retain) MPImageCache * imageCache;
@property(retain) MPImageModifier * imageModifier;
@property int imageContentMode;
@property(retain) MPImageCacheRequest * placeholderImageCacheRequest;
@property(retain) UIImage * unmodifiedPlaceholderImage;
@property(readonly) UIImage * placeholderImage;
@property(retain) MPMediaQuery * query;
@property int titleStyle;
@property(retain) UIColor * titleColor;
@property(retain) UIColor * subtitleColor;
@property(retain) UIColor * albumFillColor;
@property(readonly) BOOL useTimedArtwork;
@property BOOL useUnmodifiedThumbnails;
@property BOOL drawShadow;
@property BOOL overlapIndexBar;
@property(retain) IUMediaDataSource * dataSource;


- (id)imageCache;
- (void)setImageCache:(id)arg1;
- (void)setQuery:(id)arg1;
- (void)setDelegate:(id)arg1;
- (id)titleColor;
- (void)setTitleColor:(id)arg1;
- (id)query;
- (id)delegate;
- (id)dataSource;
- (void)setDataSource:(id)arg1;
- (void)setUseUnmodifiedThumbnails:(BOOL)arg1;
- (BOOL)useUnmodifiedThumbnails;
- (BOOL)useTimedArtwork;
- (void)setTitleStyle:(int)arg1;
- (void)setAlbumFillColor:(id)arg1;
- (id)albumFillColor;
- (id)unmodifiedPlaceholderImage;
- (void)setImageContentMode:(int)arg1;
- (int)imageContentMode;
- (void)setPlaceholderImageCacheRequest:(id)arg1;
- (id)placeholderImageCacheRequest;
- (void)setOverlapIndexBar:(BOOL)arg1;
- (BOOL)overlapIndexBar;
- (void)setImageModifier:(id)arg1;
- (id)imageModifier;
- (void)setDrawShadow:(BOOL)arg1;
- (BOOL)drawShadow;
- (struct CGSize { float x1; float x2; })titleSizeForEntityAtIndex:(unsigned int)arg1 withFont:(id)arg2;
- (struct CGSize { float x1; float x2; })subtitleSizeForEntityAtIndex:(unsigned int)arg1 withFont:(id)arg2;
- (void)setUnmodifiedPlaceholderImage:(id)arg1;
- (void)setPlaceholderImageRequest:(id)arg1;
- (struct CGPoint { float x1; float x2; })actualImageOrigin;
- (struct CGSize { float x1; float x2; })thumbnailSize;
- (unsigned int)albumsPerRow;
- (id)subtitleForEntityAtIndex:(unsigned int)arg1;
- (id)titleForEntityAtIndex:(unsigned int)arg1;
- (id)_groupDataForEntityAtIndex:(unsigned int)arg1;
- (id)_expirationForMediaItem:(id)arg1;
- (int)titleStyle;
- (struct CGSize { float x1; float x2; })_sizeForCountStringOfEntityAtIndex:(unsigned int)arg1 withFont:(id)arg2;
- (struct CGSize { float x1; float x2; })_sizeForProperty:(int)arg1 ofEntityAtIndex:(unsigned int)arg2 withFont:(id)arg3;
- (id)_countStringForEntityAtIndex:(unsigned int)arg1;
- (id)init;
- (void)dealloc;
- (id)subtitleColor;
- (void)setSubtitleColor:(id)arg1;
- (id)placeholderImage;

@end
